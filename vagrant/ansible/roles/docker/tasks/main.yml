---
# tasks file for docker
- name: Download Containerd and Docker pkgs
  vars:
    - target_os: "{{ ansible_facts['os_family']|lower }}"
  get_url:
    url: "{{ item }}"
    dest: /tmp
  loop: "{{ lookup('vars', target_os + '_urls') }}"
  retries: 3
  register: downloaded_files
  tags: [docker]

- name: Get Containerd package
  find:
    paths:
      - /tmp
    patterns: "containerd"
    use_regex: true
  register: containerd_pkg

- name: Install Containerd deb package
  ansible.builtin.apt:
    deb: "{{ containerd_pkg.files[0].path }}"
  when: ansible_facts['os_family'] == "Debian"

- name: Get package files list
  find:
    paths:
      - /tmp
    patterns: ".*(deb|rpm)"
    use_regex: true
  register: pkg_list

# - name: Print
#   debug:
#     msg: "{{ pkg_list }}"

- name: Install Docker in Ubuntu/Debian
  ansible.builtin.apt:
    deb: "{{item.1.path}}"
    install_recommends: yes
  with_indexed_items: "{{ pkg_list.files }}"
  when: ansible_facts['os_family'] == "Debian"

- name: Get rpm list
  set_fact:
    pkg_list: "{{ pkg_list.files | map(attribute='path') | list}}"

- name: Install Containerd and Docker in Centos/RedHat
  ansible.builtin.yum:
    name: "{{pkg_list}}"
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Add Nomad user to Docker group
  ansible.builtin.user:
    name: "{{ nomad_user }}"
    groups: docker
    state: present

- name: Update Docker opts
  ansible.builtin.lineinfile:
    path: /etc/default/docker
    line: "{{ docker_opts }}"
    create: yes
  become: yes

- name: Enable and start Docker service
  ansible.builtin.service:
    name: docker
    enabled: yes
    state: started
