# -*- mode: ruby -*-
# vi: set ft=ruby :

# Computing
vagrant_cpu_num = ENV['VAGRANT_CPU_NUM'] || 2
vagrant_mem = ENV['VAGRANT_MEM'] || 8192

# Networking
private_ip = ENV['PRIVATE_IP'] || "192.168.50.153"

# Base box selection
base_box = ENV['BASE_BOX'] || "bento/centos-7"
box_version = ENV['BOX_VERSION'] || "202012.21.0"

# Vault variables
vault_install = ["true", "1"].include?((ENV['VAULT_INSTALL'] || true).to_s.downcase)
vault_host_port = ENV['VAULT_HOST_PORT'] || 8200
vault_version = ENV['VAULT_VERSION'] || "1.7.0"
vault_ent_url = ENV['VAULT_ENT_URL']
vault_group = "vault"
vault_user = "vault"
vault_comment = "Vault"
vault_home = "/srv/vault"

# Consul variables
consul_install = ["true", "1"].include?((ENV['CONSUL_INSTALL'] || true).to_s.downcase)
consul_host_port = ENV['CONSUL_HOST_PORT'] || 8500
consul_version = ENV['CONSUL_VERSION'] || "1.9.5"
consul_ent_url = ENV['CONSUL_ENT_URL']
consul_group = "consul"
consul_user = "consul"
consul_comment = "Consul"
consul_home = "/srv/consul"
cni_install = ["true", "1"].include?((ENV['CNI_INSTALL'] || true).to_s.downcase)
cni_version = ENV['CNI_VERSION'] || "0.9.0"

# Nomad variables
nomad_install = ["true", "1"].include?((ENV['NOMAD_INSTALL'] || true).to_s.downcase)
nomad_host_port = ENV['NOMAD_HOST_PORT'] || 4646
nomad_version = ENV['NOMAD_VERSION'] || "1.0.4"
nomad_ent_url = ENV['NOMAD_ENT_URL']
nomad_group = "nomad"
nomad_user = "nomad"
nomad_home = "/srv/nomad"

# Docker variables
docker_install = ["true", "1"].include?((ENV['DOCKER_INSTALL'] || true).to_s.downcase)
containerd_version = ENV['CONTAINERD_VERSION'] || "1.4.3-3.1"
docker_ce_version = ENV['DOCKER_CE_VERSION'] || "20.10.3-3"
envoy_version = ENV['ENVOY_VERSION'] || "1.16.2.p0.ge98e41a-1p71.gbe6132a"

# Monitoring variables
monitoring_install = ["true", "1"].include?((ENV['MONITORING_INSTALL'] || true).to_s.downcase)
prometheus_version = ENV['PROMETHEUS_VERSION'] || "2.23.0"
grafana_version = ENV['GRAFANA_VERSION'] || "7.3.5-1"

$nomad_setup = <<SCRIPT
echo "Minimal configuration for Nomad UI"
sudo cp /tmp/nomad.hcl /etc/nomad.d/nomad.hcl
sudo systemctl restart nomad
SCRIPT

Vagrant.configure("2") do |config|

  # Use vagrant insecure public key, comment this out to restrict access
  config.ssh.insert_key = false

   # Increase memory for Parallels Desktop
   config.vm.provider "parallels" do |p, o|
    p.memory = vagrant_mem
    p.cpus = vagrant_cpu_num
  end

  # Increase memory for Virtualbox
  config.vm.provider "virtualbox" do |vb|
    vb.memory = vagrant_mem
    vb.cpus = vagrant_cpu_num
  end

  # Increase memory for VMware
  ["vmware_fusion", "vmware_workstation"].each do |p|
    config.vm.provider p do |v|
      v.vmx["memsize"] = vagrant_mem
      v.vmx["numvcpus"] = vagrant_cpu_num
    end
  end

  # Setup networking
  config.vm.network :private_network, ip: private_ip
  config.vm.network "private_network", type: "dhcp"

  # Set box version
  config.vm.box = base_box
  config.vm.box_version = box_version

  # Set hostname
  config.vm.hostname = "nomad"

  # Bootstrap the vm
  config.vm.provision "shell",
  path: "scripts/base-setup.sh"

  # Forward Ingress port
  config.vm.network :forwarded_port, guest: 8080, host: 8080, auto_correct: true

  if (vault_install)
    # Forward Vault port
    config.vm.network :forwarded_port, guest: 8200, host: vault_host_port, auto_correct: true

    # Install Vault
    config.vm.provision "shell",
    path: "scripts/vault-install.sh",
    env: {
      "GROUP" => vault_group,
      "USER" => vault_user,
      "COMMENT" => vault_comment,
      "HOME" => vault_home,
      "VERSION" => vault_version,
      "URL" => vault_ent_url,
    }
  end

  if (consul_install)
    # Forward Consul port
    config.vm.network :forwarded_port, guest: 8500, host: consul_host_port, auto_correct: true

    # Install Consul
    config.vm.provision "file", source: "configs/prometheus-service.json", destination: "/tmp/prometheus-service.json"
    config.vm.provision "file", source: "configs/grafana-service.json", destination: "/tmp/grafana-service.json"
    config.vm.provision "shell",
    path: "scripts/consul-install.sh",
    env: {
      "GROUP" => consul_group,
      "USER" => consul_user,
      "COMMENT" => consul_comment,
      "HOME" => consul_home,
      "VERSION" => consul_version,
      "URL" => consul_ent_url,
      "USER" => consul_user,
      "GROUP" => consul_group,
      "ENVOY_VERSION" => envoy_version,
      "CNI_VERSION" => cni_version,
      "CNI_INSTALL" => cni_install,
      "PRIVATE_IP" => private_ip,
    }
  end

  if (nomad_install)
    # Forward Nomad port
    config.vm.network :forwarded_port, guest: 4646, host: nomad_host_port, auto_correct: true

    # Install Nomad
    config.vm.provision "shell",
    path: "scripts/nomad-install.sh",
    env: {
      "VERSION" => nomad_version,
      "URL" => nomad_ent_url,
      "USER" => nomad_user,
      "GROUP" => nomad_group,
      "HOME" => nomad_home
    }

    config.vm.provision "file", source: "configs/nomad.conf", destination: "/tmp/nomad.hcl"
    config.vm.provision "shell", inline: $nomad_setup, privileged: false
  end

  if (docker_install)
    config.vm.provision "shell",
    path: "scripts/docker-install.sh",
    env: {
      "CONTAINERD_VERSION" => containerd_version,
      "DOCKER_CE_VERSION" => docker_ce_version,
    }
  end

  if (monitoring_install)
    config.vm.provision "file", source: "configs/prometheus.yml", destination: "/tmp/prometheus.yml"
    config.vm.provision "file", source: "configs/prometheus-ds.yaml", destination: "/tmp/prometheus-ds.yaml"
    config.vm.provision "file", source: "configs/dashboard-provision.yaml", destination: "/tmp/dashboard-provision.yaml"
    config.vm.provision "file", source: "configs/faasd.json", destination: "/tmp/faasd.json"
    config.vm.provision "file", source: "configs/nomad-jobs.json", destination: "/tmp/nomad-jobs.json"
    config.vm.provision "shell",
    path: "scripts/monitoring-install.sh",
    env: {
      "PROMETHEUS_VERSION" => prometheus_version,
      "GRAFANA_VERSION" => grafana_version,
    }
  end

   config.vm.post_up_message = "
Done!

You can reach services at:
Vautl -> http://localhost:8200
Consul -> http://localhost:8500
Nomad -> http://localhost:4646
"
end
